dependencies {
  testCompile 'org.hamcrest:hamcrest-library:1.3'
  
  testRuntime group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
  testRuntime project('mock-plugin')
  compile project(':verifier-cli')

  //bytecode generation library
  compile 'net.bytebuddy:byte-buddy:1.7.8'
}

task prepareMockPlugin(type: Copy, dependsOn: ':verifier-test:mock-plugin:build') {
  into "$buildDir/mocks"
  def mockPluginBuildDir = project('mock-plugin').buildDir
  from new File(mockPluginBuildDir, "libs/mock-plugin-1.0.jar")
}

def afterIdeaBuildDir = project('after-idea').buildDir

/**
 * Creates resources.jar file with brokenPlugins.txt file inside.
 */
task prepareResourcesJar(type: Jar, dependsOn: [project('after-idea').processResources]) {
  from "$afterIdeaBuildDir/resources/main/brokenPlugins.txt"
  destinationDir = buildDir
  archiveName = "resources.jar"
}

/**
 * Creates 'after-idea' directory which content is similar to any IDE distribution:
 * `/`
 * `/build.txt`
 * `lib/resources.jar`
 * `lib/after-idea-1.0.jar`
 * `plugins/devkit/`
 * `plugins/devkit/META-INF/plugin.xml`
 */
task prepareAfterIdea(type: Copy, dependsOn: [':verifier-test:after-idea:build', prepareResourcesJar]) {
  into "$buildDir/mocks/after-idea"

  def ideaJar = copySpec {
    from "$afterIdeaBuildDir/libs/after-idea-1.0.jar"
    into "lib"
  }

  def resourcesJar = copySpec {
    from prepareResourcesJar
    into "lib"
  }

  def buildTxt = copySpec {
    from "$afterIdeaBuildDir/resources/main/build.txt"
    into "."
  }

  def devKitMetaInf = copySpec {
    from "$afterIdeaBuildDir/resources/main/META-INF"
    into "plugins/devkit/META-INF"
  }

  with ideaJar, resourcesJar, buildTxt, devKitMetaInf
}

test.dependsOn prepareMockPlugin, prepareAfterIdea
jar.dependsOn test